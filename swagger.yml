swagger: "2.0"

info:
  title: Moku Moku Cards & Decks API
  description: Flash cards learning platform's Cards & Decks CRUD micro-service API documention.
  version: 1.0.0

consumes:
  - application/json
produces:
  - application/json

schemes:
  - http
  - https

definitions:
  Card:
    type: object
    properties:
      id:
        type: string
      front:
        type: string
      back:
        type: string
      image:
        type: string

  Deck:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      cards:
        type: array
        items:
          type: integer
          format: int64
      creator:
        type: integer
        format: int64
  RestErr:
    type: object
    properties:
      message:
        type: string
      status:
        type: integer
        format: int
      error:
        type: string

parameters:
  access_token:
    name: access_token
    type: integer
    in: header
    required: true

paths:
  /decks:
    get:
      operationId: getDecks
      description: Retrieve all decks available in the platform
      parameters:
        - $ref: '#/parameters/access_token'
      responses:
        '200':
          description: decks data retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/Deck'
        default:
          description: Error
          schema:
            $ref: '#/definitions/RestErr'
  /decks/{userID}:
    get:
      operationId: getUserDecks
      description: Retrieve all decks from the specified user
      parameters:
        - $ref: '#/parameters/access_token'
        - name: userID
          in: query
          type: string
          required: true
      responses:
        '200':
          description: retrived all decks from the specified user
          schema:
            type: array
            items:
              $ref: '#/definitions/Deck'
        default:
          description: Error
          schema:
            $ref: '#/definitions/RestErr'
  /deck:
    post:
      operationId: createDeck
      description: Creates a new deck
      parameters:
        - name: new_deck_data
          in: body
          required: true
          schema:
            allOf:
            - $ref: '#/definitions/Deck'
            type: object
            properties:
              id:
                type: string
                readOnly: true
      responses:
        '201':
          description: A new deck has been created
          schema:
            type: number
            format: byte
        '400':
          description: Invalid json body
          schema:
            $ref: '#/definitions/RestErr'
  /deck/{deckID}:
    parameters:
      - name: deckID
        in: query
        required: true
        type: string
    get:
      operationId: getDeckByID
      description: Retrieve the specified deck
      parameters:
        - $ref: '#/parameters/access_token'
      responses:
        '200':
          description: Returns the deck
          schema:
            $ref: '#/definitions/Deck'
        '404':
          description: Deck not found
          schema:
            $ref: '#/definitions/RestErr'
    delete:
      operationId: deleteDeckByID
      description: Delete the specified deck
      parameters:
        - $ref: '#/parameters/access_token'
      responses:
        '200':
          description: Deck deleted
          schema:
            type: string
            example: deck deleted
        '404':
          description: Deck not found
          schema:
            $ref: '#/definitions/RestErr'